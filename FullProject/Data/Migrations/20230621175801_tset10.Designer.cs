// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using FullProject.Data;

#nullable disable

namespace FullProject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230621175801_tset10")]
    partial class tset10
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FullProject.Models.Orders", b =>
                {
                    b.Property<int>("Id_Orders")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Orders"), 1L, 1);

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Process")
                        .HasColumnType("int");

                    b.Property<string>("Paper_Pledge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("States")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Orders");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FullProject.Models.Projects", b =>
                {
                    b.Property<int>("Id_Projects")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Projects"), 1L, 1);

                    b.Property<DateTime>("Date_Project")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_Orders")
                        .HasColumnType("int");

                    b.Property<string>("Locate_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Phone")
                        .HasColumnType("int");

                    b.Property<int?>("Orders")
                        .HasColumnType("int");

                    b.Property<string>("Owner2_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("area_Project")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Projects");

                    b.HasIndex("Orders");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("FullProject.Models.Projects", b =>
                {
                    b.HasOne("FullProject.Models.Orders", "Order")
                        .WithMany()
                        .HasForeignKey("Orders");

                    b.Navigation("Order");
                });
#pragma warning restore 612, 618
        }
    }
}
